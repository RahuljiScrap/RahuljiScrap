{"ast":null,"code":"var _jsxFileName = \"/Users/pawankumar/Documents/MyGitHubProject/Food-Order-Landing-Page/src/components/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cartcontext\";\n\n//Created a default state for the cart to be used in the reducer function and the reducer hook defalt state;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n//END\n\n//The Reducer function loic\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    //Finding the accurate Total Amount\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    //END\n\n    //Checking if an item already exists in the Cart, if yes findng it's index , if no , giving it a value of null\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    //END\n\n    //Assigning the existing item variable to the existing variale in the cart, if there is no existing variabe, it's vaue will be null or false like said above\n    const existingItem = state.items[existingItemIndex];\n    //END\n    let updatedItems;\n\n    //Checking If is is true or false that the item already exists in the cart\n    if (existingItem) {\n      //assigns  the exsiting item and adds the amount inputted to the amount of the existing item to the updatedItem variale\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      //END\n\n      //Get all the items in the cart and assigns the updatedItem varibale to the Existing item\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n      //END\n    } else {\n      //Adding the item into the cart if it doesn't exist before before\n      updatedItems = state.items.concat(action.item);\n      //END\n    }\n\n    return {\n      //Returning the items data and totalAmount\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n      //END\n    };\n  }\n  //END\n\n  if (action.type === \"REMOVE\") {\n    //Checking if an item already exists in the Cart, if yes findng it's index , if no , giving it a value of null\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    //END\n\n    //Assigning the existing item variable to the existingItem variable\n    const existingItem = state.items[existingItemIndex];\n    //END\n\n    //Finding the accurate Total Amount\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    //END\n    let updatedItems;\n\n    //Checking if the amount is equals to 1\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    }\n    //END\n    else {\n      //Get all the items in the cart, decrements the item amount and assigns them to the updatedItem\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      //END\n\n      //Get all the items in the cart and assigns the updatedItem varibale to the Existing item\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n      //END\n    }\n\n    return {\n      //Returning the items data and totalAmount\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n      //END\n    };\n  }\n  //Returns the default cart state if no condition is met\n  return defaultCartState;\n  //END\n};\n\nconst CartProvider = props => {\n  _s();\n  //Using the useReducr hook\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  //END\n\n  //dispatching the cart ADD action\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  //dispatching the cart REMOVE action\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  //Defining and Automating the cartContext Functions\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n\n  //Rendering every content being rendered by the use CartContext, using the .Provider to let the context be able to manage other parts of the application\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingItemIndex","findIndex","id","existingItem","updatedItems","updatedItem","concat","filter","CartProvider","props","_s","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pawankumar/Documents/MyGitHubProject/Food-Order-Landing-Page/src/components/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cartcontext\";\n\n//Created a default state for the cart to be used in the reducer function and the reducer hook defalt state;\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n//END\n\n//The Reducer function loic\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    //Finding the accurate Total Amount\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    //END\n\n    //Checking if an item already exists in the Cart, if yes findng it's index , if no , giving it a value of null\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    //END\n\n    //Assigning the existing item variable to the existing variale in the cart, if there is no existing variabe, it's vaue will be null or false like said above\n    const existingItem = state.items[existingItemIndex];\n    //END\n    let updatedItems;\n\n    //Checking If is is true or false that the item already exists in the cart\n    if (existingItem) {\n      //assigns  the exsiting item and adds the amount inputted to the amount of the existing item to the updatedItem variale\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n      //END\n\n      //Get all the items in the cart and assigns the updatedItem varibale to the Existing item\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n      //END\n    } else {\n      //Adding the item into the cart if it doesn't exist before before\n      updatedItems = state.items.concat(action.item);\n      //END\n    }\n    return {\n      //Returning the items data and totalAmount\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      //END\n    };\n  }\n  //END\n\n  if (action.type === \"REMOVE\") {\n    //Checking if an item already exists in the Cart, if yes findng it's index , if no , giving it a value of null\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    //END\n\n    //Assigning the existing item variable to the existingItem variable\n    const existingItem = state.items[existingItemIndex];\n    //END\n\n    //Finding the accurate Total Amount\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    //END\n    let updatedItems;\n\n    //Checking if the amount is equals to 1\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    }\n    //END\n    else {\n      //Get all the items in the cart, decrements the item amount and assigns them to the updatedItem\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      //END\n\n      //Get all the items in the cart and assigns the updatedItem varibale to the Existing item\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n      //END\n    }\n    return {\n      //Returning the items data and totalAmount\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      //END\n    };\n  }\n  //Returns the default cart state if no condition is met\n  return defaultCartState;\n  //END\n};\n\nconst CartProvider = (props) => {\n  //Using the useReducr hook\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n  //END\n\n  //dispatching the cart ADD action\n  const addItemHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  //dispatching the cart REMOVE action\n  const removeItemHandler = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  //Defining and Automating the cartContext Functions\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n  };\n\n  //Rendering every content being rendered by the use CartContext, using the .Provider to let the context be able to manage other parts of the application\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}